[build-system]
requires = ["hatchling>=1.4.0", "jupyterlab~=4.0", "hatch-nodejs-version"]
build-backend = "hatchling.build"

[project]
name = "jupyter_ai"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9"
classifiers = [
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
    "Framework :: Jupyter :: JupyterLab :: 4",
    "Framework :: Jupyter :: JupyterLab :: Extensions",
    "Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # jupyter_server>=2.4 is required in JL4
    "jupyter_server>=2.4.0,<3",
    "importlib_metadata>=5.2.0",
    # pydantic <2.10.0 raises a "protected namespaces" error in JAI
    # - See: https://docs.pydantic.dev/latest/api/config/#pydantic.config.ConfigDict.protected_namespaces
    "pydantic>=2.10.0,<3",
    "jupyter_ai_magics>=2.31.1,<3.0.0",
    "dask[distributed]",
    # faiss-cpu is not distributed by the official repo.
    # v1.8.0.post0 should be excluded as it lacks macOS x86 wheels.
    "faiss-cpu>=1.8.0,<2.0.0,!=1.8.0.post0",
    # traitlets>=5.6 is required in JL4
    "traitlets>=5.6",
    "deepmerge>=2.0,<3",
]

dynamic = ["version", "description", "authors", "urls", "keywords"]

[project.entry-points."jupyter_ai.default_tasks"]
core_default_tasks = "jupyter_ai:tasks"

[project.entry-points."jupyter_ai.chat_handlers"]
default = "jupyter_ai.chat_handlers.default:DefaultChatHandler"
learn = "jupyter_ai.chat_handlers.learn:LearnChatHandler"
ask = "jupyter_ai.chat_handlers.ask:AskChatHandler"
clear = "jupyter_ai.chat_handlers.clear:ClearChatHandler"
generate = "jupyter_ai.chat_handlers.generate:GenerateChatHandler"
export = "jupyter_ai.chat_handlers.export:ExportChatHandler"
fix = "jupyter_ai.chat_handlers.fix:FixChatHandler"
help = "jupyter_ai.chat_handlers.help:HelpChatHandler"

[project.optional-dependencies]
test = [
    # jupyter_server>=2.4 is required in JL4
    "jupyter_server[test]>=2.4.0,<3",
    "coverage",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-tornasync",
    "pytest-jupyter",
    "syrupy~=4.0.8",
    "types-jsonschema",
    "mypy",
]

dev = ["jupyter_ai_magics[dev]"]

all = ["jupyter_ai_magics[all]", "pypdf", "arxiv"]

[tool.hatch.version]
source = "nodejs"

[tool.hatch.metadata.hooks.nodejs]
fields = ["description", "authors", "urls"]

[tool.hatch.build.targets.sdist]
artifacts = ["jupyter_ai/labextension"]
exclude = [".github", "binder"]

[tool.hatch.build.targets.wheel.shared-data]
"jupyter_ai/labextension" = "share/jupyter/labextensions/@jupyter-ai/core"
"install.json" = "share/jupyter/labextensions/@jupyter-ai/core/install.json"
"jupyter-config/server-config" = "etc/jupyter/jupyter_server_config.d"
"jupyter-config/nb-config" = "etc/jupyter/jupyter_notebook_config.d"

[tool.hatch.build.hooks.version]
path = "jupyter_ai/_version.py"

[tool.hatch.build.hooks.jupyter-builder]
dependencies = ["hatch-jupyter-builder>=0.5"]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "jupyter_ai/labextension/static/style.js",
    "jupyter_ai/labextension/package.json",
]
skip-if-exists = ["jupyter_ai/labextension/static/style.js"]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
build_cmd = "build:prod"
npm = ["jlpm"]

[tool.hatch.build.hooks.jupyter-builder.editable-build-kwargs]
build_cmd = "install:extension"
npm = ["jlpm"]
source_dir = "src"
build_dir = "jupyter_ai/labextension"
